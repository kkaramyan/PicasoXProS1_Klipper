#macro.cfg
# designed by Karen Karamyan  https://t.me/kkaramyan (c) 2024

[delayed_gcode SET_EXTRUDER_AND_HOME]
initial_duration: 0.1
gcode:
  SET_FILAMENT_SENSOR SENSOR=Filament_Motion_E0 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=Filament_Motion_E1 ENABLE=0
  LED_White
  T0
  G28
  HIGH_RESONANCE_COMPENSATION

[gcode_macro MY_SAFE_HOMING] 
gcode:
 {% if not printer.toolhead.homed_axes|string == "xyz" %}
 G28
 {% endif %} 

[gcode_macro M0]
gcode:
  PAUSE


[gcode_macro BEFORE_PRINT] 
gcode:
# LED_White
 SET_FAN_SPEED FAN=ChamberIntake_fan SPEED=0
 SET_FAN_SPEED FAN=ChamberCirculation_fan SPEED=.3
 SET_FILAMENT_SENSOR SENSOR=Filament_Presence_E0 ENABLE=1
 SET_FILAMENT_SENSOR SENSOR=Filament_Presence_E1 ENABLE=1
 {% if printer['gcode_macro T0'].hotend == 1 %} 
  T0
  MY_SAFE_HOMING
  T1
 {% else %}
  MY_SAFE_HOMING
 {% endif %}
 
[gcode_macro AFTER_PRINT]
gcode:
  {% set x_park = printer.toolhead.axis_maximum.x|float - 25.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 10.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < max_z/2 %}
      {% set z_park = max_z/2 - act_z %}
  {% else %}
      {% set z_park = max_z - act_z %}
  {% endif %}
	SET_FAN_SPEED FAN=ChamberIntake_fan SPEED=.35
  M104 T0 S0
  M140 S0
  M104 T1 S0
  T0

  G92 E1
  G1 E-1 F300
  #LED_Green
  G91
    G1 Z{z_park} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  G91
  M84


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[delayed_gcode save_probe_t0]
gcode:
  SET_GCODE_VARIABLE MACRO=GET_NOZZLE_DELTA VARIABLE=probed_t0 VALUE={printer.probe.last_z_result} 

[delayed_gcode save_probe_t1]
gcode:
  SET_GCODE_VARIABLE MACRO=GET_NOZZLE_DELTA VARIABLE=probed_t1 VALUE={printer.probe.last_z_result} 

[delayed_gcode save_nozzle_delta]
gcode:
 SET_GCODE_VARIABLE MACRO=GET_NOZZLE_DELTA VARIABLE=probed_delta VALUE={(printer['gcode_macro GET_NOZZLE_DELTA'].probed_t0 - printer['gcode_macro GET_NOZZLE_DELTA'].probed_t1) * -1} 
 {% set print_string = (-1 * (printer['gcode_macro GET_NOZZLE_DELTA'].probed_t0 - printer['gcode_macro GET_NOZZLE_DELTA'].probed_t1))|string %}
 {action_respond_info("Nozzle Z offset is " + print_string )}
 
[gcode_macro PRINT_NOZZLE_DELTA]
gcode:
 {% set print_string = printer['gcode_macro GET_NOZZLE_DELTA'].probed_delta|string %}
 {action_respond_info("Nozzle Z offset is " + print_string )}

[gcode_macro PROBE_T0]
gcode:
 T0
 PROBE SAMPLES=3 SAMPLES_TOLERANCE_RETRIES=1 SAMPLES_RESULT=median
 G1 Z5 F3000
 UPDATE_DELAYED_GCODE ID=save_probe_t0 DURATION=0.1

[gcode_macro PROBE_T1]
gcode:
 T1
 PROBE SAMPLES=3 SAMPLES_TOLERANCE_RETRIES=1 SAMPLES_RESULT=median
 G1 Z5 F3000
 T0
 UPDATE_DELAYED_GCODE ID=save_probe_t1 DURATION=0.1

[gcode_macro GET_NOZZLE_DELTA]
variable_probed_t0:0.0
variable_probed_t1:0.0
variable_probed_delta:0.0
gcode:
  MY_SAFE_HOMING
  PROBE_T0
  PROBE_T1 
  UPDATE_DELAYED_GCODE ID=save_nozzle_delta DURATION=0.1
 
 
[gcode_macro M0]
gcode:
  PAUSE

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
#default_parameter_E: 1.7
gcode:
  {% set x_park = printer.toolhead.axis_maximum.x|float - 15.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  {% set E = params.E|default(1.7)|float %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  SET_FILAMENT_SENSOR SENSOR=Filament_Presence_E0 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=Filament_Presence_E1 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=Filament_Motion_E0 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=Filament_Motion_E1 ENABLE=0
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  G91

[gcode_macro RESUME]
rename_existing: BASE_RESUME
#default_parameter_E: 1.7
gcode:
  {% set E = params.E|default(1.7)|float %}
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME
  SET_FILAMENT_SENSOR SENSOR=Filament_Presence_E0 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=Filament_Presence_E1 ENABLE=1
  #SET_FILAMENT_SENSOR SENSOR=Filament_Motion_E0 ENABLE=1
  #SET_FILAMENT_SENSOR SENSOR=Filament_Motion_E1 ENABLE=1
 

[gcode_macro TURN_OFF]
description: Shutdown mashine and turn off power supply 
variable_value: 1
gcode:
  {% if params.VALUE is not defined %}
     {% set state = 0 %}
  {% else %}
     {% set state = params.VALUE %}
  {% endif %} 
  {% if state == 1 %}
    # turn power on
    SET_PIN PIN=_power_supply_off VALUE=1
    #{action_respond_info("State is "+state|int|string+" should be 1")}
    SET_GCODE_VARIABLE MACRO=TURN_OFF VARIABLE=value value={state}
  {% else %}
#    # turn power off
    SET_PIN PIN=_power_supply_off VALUE=0
    SET_GCODE_VARIABLE MACRO=TURN_OFF VARIABLE=value value={state}
    #{action_respond_info("State is "+state|int|string+" should be 0")}
    {action_call_remote_method("shutdown_machine")}
  {% endif %}

[gcode_macro CALIBRATE_EXTRUDER_HEATER]
gcode:
 {% set T_array = ['extruder','extruder1'] %}   
 {% set T_index = params.HOTEND|default(0)|int %}
 {% set T_temp = params.CENTIGRADE|default(250)|float %}
 MY_SAFE_HOMING
 G90
 G1 Z5.0 F6000
 M106 S255
 {% if T_index == 0 %}
  T0
 {% else %}
  T1
 {% endif %}
 {action_respond_info("Hotend: " + T_array[T_index]|string +" calibrating for temperature: "+ T_temp|string)}   
 PID_CALIBRATE HEATER={T_array[T_index]} TARGET={T_temp} 
  

[gcode_macro CALIBRATE_BED_HEATER]
gcode:
  {% set HTemp = params.CENTIGRADE|default(100)|float %}
    MY_SAFE_HOMING
    G90
    G1 Z5.0 F6000
    PID_CALIBRATE HEATER=heater_bed TARGET={HTemp}

[gcode_macro HEAD_TO_CENTRE]
gcode:
  {% set x_centre = 100 %}
  {% set y_centre = 100 %}
    
  MY_SAFE_HOMING
    G90
    G1 Z100.0 F6000
    G1 X{x_centre} Y{y_centre} F6000   

    
[delayed_gcode drying_completed]
gcode:
  {action_respond_info("FILAMENT DRYING COMPLETED")}

[gcode_macro DRY_FILAMENT]
gcode:
   {% set DTime = params.MINUTES|default(60)|float %}
   {% set DTemp = params.CENTIGRADE|default(60)|float %}
    
    
  {% set x_park = (printer.toolhead.axis_minimum.x +15)|float %}
  {% set y_park = (printer.toolhead.axis_maximum.y-5)|float %}
  {% set z_level = (printer.toolhead.axis_maximum.z-80) %}
 
  G28 F6000
  G90
  G0 X{x_park} Y{y_park} F6000
  G0 Z{z_level}
  {action_respond_info("PLACE THE FILAMENT REEL ON THE HOTBED AFTER END OF IT'S MOVEMENT")}

  M140 S{DTemp}
    
  G4 P{60000*DTime}

  {action_respond_info("DRYING FILAMENT FOR "+DTime|int|string+" MINUTES AT "+DTemp|int|string+" DEGREES BY CENTIGRADE")}

  M140 S0
 UPDATE_DELAYED_GCODE ID=drying_completed DURATION=1



[gcode_macro M207]
gcode:
  {% if params.S is not defined %}
     {% set S = printer.configfile.settings.firmware_retraction.retract_length|float %}
  {% else %}
    {% set S = params.S %} 
  {% endif %}
  {% if params.F is not defined %}
     {% set F = printer.configfile.settings.firmware_retraction.retract_speed|float %}
  {% else %}
     {% set F = params.F %} 
    {% endif %}
  
   SET_RETRACTION RETRACT_LENGTH={S} RETRACT_SPEED={F}

[gcode_macro M208]
gcode:
  {% if params.S is not defined %}
     {% set S = printer.configfile.settings.firmware_retraction.unretract_extra_length|float %}
  {% else %}
    {% set S = params.S %} 
  {% endif %}
  {% if params.F is not defined %}
     {% set F = printer.configfile.settings.firmware_retraction.unretract_speed|float %}
  {% else %}
     {% set F = params.F %} 
  {% endif %}  

 SET_RETRACTION UNRETRACT_EXTRA_LENGTH={S} UNRETRACT_SPEED={F}


[gcode_macro FILAMENT_OPERATION_POSITION]
gcode:
  MY_SAFE_HOMING
  SET_FILAMENT_SENSOR SENSOR=Filament_Presence_E0 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=Filament_Presence_E1 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=Filament_Motion_E0 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=Filament_Motion_E1 ENABLE=0
  G90
  G0 X100  F12000
  G0 Y5 F12000
  G0 Z50 F3000
  M400
  


[gcode_macro LOAD_FILAMENT]
gcode:
  M83
  G1 E100 F200
  M400
  G1 E-0.1 F1200
  

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83
  G1 E-150 F1200




[gcode_macro HIGH_RESONANCE_COMPENSATION]
gcode:  
  SET_INPUT_SHAPER SHAPER_TYPE_X=mzv SHAPER_TYPE_Y=mzv SHAPER_FREQ_X=105 SHAPER_FREQ_Y=79.4
  SET_VELOCITY_LIMIT ACCEL=18600 ACCEL_TO_DECEL=9300 SQUARE_CORNER_VELOCITY=5 VELOCITY=500

[gcode_macro LOW_RESONANCE_COMPENSATION]
gcode:  
  SET_INPUT_SHAPER SHAPER_TYPE_X=zv SHAPER_TYPE_Y=zv SHAPER_FREQ_X=106 SHAPER_FREQ_Y=84.8
  SET_VELOCITY_LIMIT ACCEL=28000 ACCEL_TO_DECEL=14000 SQUARE_CORNER_VELOCITY=10 VELOCITY=1000


 
[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}


[gcode_macro LED_White]
gcode:
  SET_LED LED=LED_Stripe RED=.75 GREEN=.75 BLUE=.75
#
[gcode_macro LED_Red]
gcode:
  SET_LED LED=LED_Stripe RED=.75 GREEN=0 BLUE=0
#
[gcode_macro LED_Green]
gcode:
  SET_LED LED=LED_Stripe RED=0 GREEN=.75 BLUE=0
#
[gcode_macro LED_Blue]
gcode:
  SET_LED LED=LED_Stripe RED=0 GREEN=0 BLUE=0.75
#
[gcode_macro LED_off]
gcode:
  SET_LED LED=LED_Stripe RED=0 GREEN=0 BLUE=0
#


[gcode_macro HIGH_RESONANCE_COMPENSATION]
gcode:  
  SET_INPUT_SHAPER SHAPER_TYPE_X=zv SHAPER_TYPE_Y=mzv SHAPER_FREQ_X=63.8 SHAPER_FREQ_Y=58.8
  SET_VELOCITY_LIMIT ACCEL=10200 ACCEL_TO_DECEL=5100 SQUARE_CORNER_VELOCITY=5 VELOCITY=400

[gcode_macro LOW_RESONANCE_COMPENSATION]
gcode:  
  SET_INPUT_SHAPER SHAPER_TYPE_X=zv SHAPER_TYPE_Y=zv SHAPER_FREQ_X=63.8 SHAPER_FREQ_Y=57.6
  SET_VELOCITY_LIMIT ACCEL=12900 ACCEL_TO_DECEL=6450 SQUARE_CORNER_VELOCITY=10 VELOCITY=500


[gcode_macro NOTIFY_FILAMENT_CHANGE]
gcode:
  {action_call_remote_method("notify",
                             name="my_telegram_notifier",
                             message="Filament change needed!")}